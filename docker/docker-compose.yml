version: '3.8'

services:
  repository-manager:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-repository-manager
    ports:
      - "8860:8000"
    environment:
      - SERVICE_NAME=repository_manager
      - SERVICE_PORT=8000
    command: uvicorn api.repository_manager:app --host 0.0.0.0 --port 8000
    networks:
      - iaops-network
    restart: unless-stopped

  task-manager:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-task-manager
    ports:
      - "8861:8000"
    environment:
      - SERVICE_NAME=task_manager
      - SERVICE_PORT=8000
    command: uvicorn api.task_manager:app --host 0.0.0.0 --port 8000
    networks:
      - iaops-network
    restart: unless-stopped

  log-manager:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-log-manager
    ports:
      - "8862:8000"
    environment:
      - SERVICE_NAME=log_manager
      - SERVICE_PORT=8000
    command: uvicorn api.log_manager:app --host 0.0.0.0 --port 8000
    networks:
      - iaops-network
    restart: unless-stopped

  datasync-manager:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-datasync-manager
    ports:
      - "8863:8000"
    environment:
      - SERVICE_NAME=datasync_manager
      - SERVICE_PORT=8000
    command: uvicorn api.datasync_manager:app --host 0.0.0.0 --port 8000
    networks:
      - iaops-network
    restart: unless-stopped

  github-runner-manager:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-github-runner-manager
    ports:
      - "8864:5000"
    environment:
      - SERVICE_NAME=github_runner_manager
      - SERVICE_PORT=5000
      - FLASK_APP=api.github_runner_manager
      - FLASK_ENV=production
    command: python -m flask run --host=0.0.0.0 --port=5000
    networks:
      - iaops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  techdocs-builder:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: iaops-techdocs-builder
    ports:
      - "8865:5000"
    environment:
      - SERVICE_NAME=techdocs_builder_manager
      - SERVICE_PORT=5000
      - FLASK_APP=api.techdocs_builder_manager
      - FLASK_ENV=production
    command: python -m flask run --host=0.0.0.0 --port=5000
    networks:
      - iaops-network
    restart: unless-stopped

networks:
  iaops-network:
    external: true
